{"version":3,"sources":["logo.svg","Row.js","App.js","reportWebVitals.js","index.js"],"names":["Row","boardArray","play","map","array","cols","value","columnIndex","Cell","color","justify","align","className","onClick","App","initialGameState","player1","player2","playerTurn","board","gameOver","message","useReducer","state","action","type","nextPlayer","gameState","dispatchGameState","c","r","result","checkHorizontal","checkVertical","checkDiagonalLeft","checkDiagonalRight","checkDraw","style","backgroundColor","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.712d8b8f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const Row=({boardArray, play})=>\r\n{\r\n    return (\r\n        <tr>\r\n          {boardArray.map((array, cols) => (\r\n            <Cell key={cols} value={array} columnIndex={cols} play={play} />\r\n          ))}\r\n        </tr>\r\n      )\r\n}\r\n\r\nconst Cell = ({ value, columnIndex, play }) => {\r\n    let color = 'whiteCircle'\r\n  \r\n    if (value === 1) { color = 'redCircle'} \r\n    else if (value === 2) { color = 'yellowCircle'}\r\n  \r\n    return (\r\n      <td>\r\n        <div\r\n          justify=\"center\"\r\n          align=\"center\" className=\"gameCell\"\r\n          onClick={() => {\r\n            play(columnIndex)\r\n          }}>\r\n          <div className={color}></div>\r\n        </div>\r\n      </td>\r\n    )\r\n  }","import logo from './logo.svg';\nimport './App.css';\nimport {useReducer} from 'react';\nimport {Row} from './Row';\n\n\nfunction App() {\n  let initialGameState = {\n    player1: 1,\n    player2: 2,\n    playerTurn: 1,\n    board: [\n      [null, null, null, null, null, null, null],\n      [null, null, null, null, null, null, null],\n      [null, null, null, null, null, null, null],\n      [null, null, null, null, null, null, null],\n      [null, null, null, null, null, null, null],\n      [null, null, null, null, null, null, null],\n    ],\n    gameOver: false,\n    message: '',\n  }\n\n  const gameReducer = (state,action) => { \n    switch(action.type)\n    {\n    case 'togglePlayer':\n        return {\n          ...state,\n          playerTurn: action.nextPlayer,\n        }\n        case 'newGame':\n        return {\n          ...initialGameState\n        }\n        case 'gameEnd':\n          {\n            return{\n              ...state,\n              message: action.message,\n          gameOver:true\n            }\n          }\n          case 'draw':\n            {\n              return{\n              ...state,\n              message: action.message,\n          gameOver:true\n            }\n          }\n      }\n  }\n  \n  const [gameState, dispatchGameState] = useReducer(\n    gameReducer,\n    initialGameState\n  )\n  const play = (c) => { \n    if (!gameState.gameOver) {\n    for (let r = 5; r >= 0; r--) {\n      if (!gameState.board[r][c]) {\n        gameState.board[r][c] = gameState.playerTurn\n        break\n       }\n    }\n    dispatchGameState({ type: 'togglePlayer', nextPlayer, board:gameState.board })\n\n    function checkHorizontal(board) {\n      for (let r = 0; r < 6; r++) {\n        for (let c = 0; c < 4; c++) {\n          if (board[r][c]) {\n            if (board[r][c] === board[r][c + 1] && \n                board[r][c] === board[r][c + 2] &&\n                board[r][c] === board[r][c + 3]) {\n              return board[r][c];\n            }\n          }\n        }\n      }\n    }\n\n    function checkVertical(board) {\n      for (let r = 3; r < 6; r++) {\n        for (let c = 0; c < 7; c++) {\n          if (board[r][c]) {\n            if (board[r][c] === board[r - 1][c] &&\n                board[r][c] === board[r - 2][c] &&\n                board[r][c] === board[r - 3][c]) {\n              return board[r][c];    \n            }\n          }\n        }\n      }\n    }\n    \n    function checkDiagonalLeft(board) {\n      for (let r = 3; r < 6; r++) {\n        for (let c = 3; c < 7; c++) {\n          if (board[r][c]) {\n            if (board[r][c] === board[r - 1][c - 1] &&\n                board[r][c] === board[r - 2][c - 2] &&\n                board[r][c] === board[r - 3][c - 3]) {\n              return board[r][c];\n            }\n          }\n        }\n      }\n    }\n\n    function checkDiagonalRight(board) {\n      for (let r = 3; r < 6; r++) {\n        for (let c = 0; c < 4; c++) {\n          if (board[r][c]) {\n            if (board[r][c] === board[r - 1][c + 1] &&\n                board[r][c] === board[r - 2][c + 2] &&\n                board[r][c] === board[r - 3][c + 3]) {\n              return board[r][c];\n            }\n          }\n        }\n      }\n    }\n\n    function checkDraw(board) {\n      for (let r = 0; r < 6; r++) {\n        for (let c = 0; c < 7; c++) {\n          if (board[r][c] === null) {\n            return null;\n          }\n        }\n      }\n      return 'draw';    \n    }\n    \n    function checkAll(board)\n    {\nreturn checkHorizontal(board)||checkVertical(board)||checkDiagonalLeft(board)||checkDiagonalRight(board)||checkDraw(board);\n    }\n    \n    let result = checkAll(gameState.board);\n      if (result === gameState.player1) {\n        dispatchGameState({ type: 'gameEnd', message:\"Player 1 wins\"})\n      } else if (result === gameState.player2) {\n        dispatchGameState({ type: 'gameEnd', message:\"Player 2 wins\"})\n      }  \n      else if (result==='draw')\n      {\n        dispatchGameState({type:'draw',message:\"Match Draw\"})\n      }\n  }\n}\n\n  const nextPlayer =\n  gameState.playerTurn === gameState.player1\n    ? gameState.player2\n    : gameState.player1\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Welcome to Connect4\n      </header>\n      <div style={{backgroundColor:\"lightslategrey\",color:\"white\"}}>\n        Player {gameState.playerTurn} turn\n        </div>\n        <div><button className=\"btn\" onClick={()=>dispatchGameState({ type: 'newGame'})}>New Game</button></div>\n        <table>\n          <thead>\n          </thead>\n          <tbody>\n          {gameState.board.map((boardArray,rows)=>\n          (\n           <Row key={rows} boardArray={boardArray} play={play}/>\n          ))}\n          </tbody>\n        </table>\n        <div className=\"msg\">{gameState.message}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}